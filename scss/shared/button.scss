/////////////////////////////
//buttons
.btn {
	padding: 10px 15px;
	background-color: $primary-color;
	color: $light-color;
	border: 1px solid transparent;
	font-size: $body-font-size;
	font-weight: inherit;
	text-align: inherit;
	display: inline-flex;
	align-items: center;

	@include transition(0.3s);
	@include corner(5px);
	&:active, &.active, &:focus {
		border-width: 1px;
		@include shadow(none)
	}
	&:disabled, &.disabled,
	&--hover-none{
		pointer-events: none;
	}
}
.btn_content-center {
	justify-content: center;
}
//size
.btn_xs {
	@extend .btn;
	padding: 5px 10px;
	@extend .text_xs;
	line-height: 1;
}
.btn_sm {
	@extend .btn;
	@extend .text_sm;
	line-height: 1;
}
.btn_md {
	@extend .btn;
	padding: 10px 20px;
	@extend .text_md;
	line-height: 1.2;
}
.btn_lg {
	@extend .btn;
	padding: 10px 25px;
	@extend .text_lg;
	line-height: 1.2;
}
.btn_xl {
	@extend .btn;
	padding: 15px 30px;
	@extend .text_lg;
	line-height: 1.1;
}
//full
.btn_block {
	text-align: center;
	display: block;
    width: 100%;
}
.btn_full {
    width: 100%;
}
//rounded
.btn_oval {
	@extend .btn;
	@include corner(10rem);
}
.btn_corner-none {
	@include corner(0);
}
.btn_corner-md {
	@include corner(10px);
}
.btn_circle {
	padding: 0;
	@extend .btn;
	@include corner(100%);
	position: relative;
	width: 50px;
	height: 50px;
	text-align: center;
	justify-content: center;
	&:hover{
		color: $light-color;
	}
}
.btn_circle-md {
	@extend .btn_circle;
	width: 40px;
	height: 40px;
	@extend .text_default;
}
.btn_circle-sm {
	@extend .btn_circle;
	width: 30px;
	height: 30px;
	@extend .text_default;
}
.btn_circle-xs {
	@extend .btn_circle;
	width: 22px;
	height: 22px;
	@extend .text_sm;
}
.btn_circle-xxs {
	@extend .btn_circle;
	width: 20px;
	height: 20px;
	@extend .text_sm;
}
.btn_circle__icon {
	@include position(absolute, 0, 0, 0, 0, 20px, 20px);
	margin: auto;
	line-height: 20px !important;
	text-align: center;
	@extend .text_md;
	&.fa, &.fas{
		font-size: inherit;
	}
}
.btn_circle__icon-xxs {
	@extend .btn_circle__icon;
	height: 18px;
	width: 18px;
	line-height: 18px !important;
}

/////////////////////////////
//colors
//outline
.btn_outline {
	background-color: transparent;
	&:hover{
		color: $light-color;
		border-color: transparent;
	}
}

//link
.btn_link {
	background-color: transparent;
	padding: 0;
	display: inline-flex;
	align-items: center;
	&:active, &.active, &:focus {
		border-width: 1px;
		@include shadow(none)
	}
	&:disabled, &.disabled,
	&-hover-none{
		pointer-events: none;
	}
}

// fixed
.btn_fixed-bottom-right {
	@include position(fixed, null, 30px, null, 20px, null, null);
	z-index: 1;
}
.btn_fixed-bottom-left {
	@include position(fixed, null, 30px, 20px, null,  null, null);
	z-index: 1;
}
.btn_fixed-top-right {
	@include position(fixed, 30px, null, null, 20px, null, null);
	z-index: 1;
}
.btn_fixed-top-left {
	@include position(fixed, 30px, null, 20px, null,  null, null);
	z-index: 1;
}

//format color
@each $colorClass, $value in $buttons-palette {
	.btn_#{$colorClass} {
		@extend .btn;
		background-color: map-get($value, 'bg');
		color: map-get($value, 'color');
		&.active,
		&:hover {
			color: map-get($value, 'color');
			color: map-get($value, 'color-hover');
			background-color: map-get($value, 'hover');
		}
	}
	.btn_soft-#{$colorClass}{
		@extend .btn;
		background-color: rgba($color: map-get($value, 'bg'), $alpha: 0.15);
		color: map-get($value, 'bg');
		&.active,
		&:hover {
			color: map-get($value, 'color');
			background-color: map-get($value, 'hover');
		}
	}
	.btn_outline-#{$colorClass} {
		@extend .btn_outline;
		border-color: map-get($value, 'bg');
		color: map-get($value, 'bg');
		&.active,
		&:hover {
			color: map-get($value, 'color');
			background-color: map-get($value, 'hover');
			border-color: map-get($value, 'hover');
		}
	}
	.btn_link-#{$colorClass} {
		@extend .btn_link;
		color: map-get($value, 'bg');
		&.show,
		&.active,
		&:hover {
			color: map-get($value, 'hover');
		}
	}
	.btn_link-hover-#{$colorClass} {
		&.show,
		&.active,
		&:hover {
			color: map-get($value, 'bg');
		}
	}
	.btn_hover-#{$colorClass} {
		&.show,
		&.active,
		&:hover {
			background-color: map-get($value, 'bg');
			color: map-get($value, 'color');
			border-color: map-get($value, 'bg');
		}
	}
	.btn_hover-color-#{$colorClass} {
		&.show,
		&.active,
		&:hover {
			color: map-get($value, 'bg');
		}
	}
}